@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model TeamAlpha.GoldenOracle.Models.Characters

@{
}


@using (Html.BeginForm())
{

<h2>Edit Character</h2>


    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*<h4>Characters</h4>*@

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form">
            <div class="form-group">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="row">
                    <div class="col">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col">
                        @Html.LabelFor(model => model.Initiative, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Initiative, new { htmlAttributes = new { @class = "form-control", min = 0, max = 20 } })
                            @Html.ValidationMessageFor(model => model.Initiative, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <p></p>

                <div class="row">
                    <div class="col">
                        @Html.LabelFor(model => model.Race, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EnumDropDownListFor(model => model.RaceSelection,
                                new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="col">
                        @Html.LabelFor(model => model.SubRaces, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EnumDropDownListFor(model => model.SubRaceSelection,
                               new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="col">
                        @Html.LabelFor(model => model.Class, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EnumDropDownListFor(model => model.ClassSelection,
                            new { @class = "form-control" })
                        </div>
                    </div>
                </div>

                <p> </p>

                <div class="row">
                    <div class="col">
                        @Html.LabelFor(model => model.Strength, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Strength, new { htmlAttributes = new { @class = "form-control", min = 0, max = 20 } })
                            @Html.ValidationMessageFor(model => model.Strength, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col">
                        @Html.LabelFor(model => model.Intelligence, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Intelligence, new { htmlAttributes = new { @class = "form-control", min = 0, max = 20 } })
                            @Html.ValidationMessageFor(model => model.Intelligence, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <p> </p>

                <div class="row">
                    <div class="col">
                        @Html.LabelFor(model => model.Dexterity, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Dexterity, new { htmlAttributes = new { @class = "form-control", min = 0, max = 20 } })
                            @Html.ValidationMessageFor(model => model.Dexterity, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col">
                        @Html.LabelFor(model => model.Wisdom, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Wisdom, new { htmlAttributes = new { @class = "form-control", min = 0, max = 20 } })
                            @Html.ValidationMessageFor(model => model.Wisdom, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <p> </p>

                <div class="row">
                    <div class="col">
                        @Html.LabelFor(model => model.Constitution, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Constitution, new { htmlAttributes = new { @class = "form-control", min = 0, max = 20 } })
                            @Html.ValidationMessageFor(model => model.Constitution, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col">
                        @Html.LabelFor(model => model.Charisma, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Charisma, new { htmlAttributes = new { @class = "form-control", min = 0, max = 20 } })
                            @Html.ValidationMessageFor(model => model.Charisma, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn-success" /> |
                @Html.ActionLink("Back to List", "List")
            </div>
        </div>
    </div>
}
